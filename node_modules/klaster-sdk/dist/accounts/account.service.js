import { stringToHex, } from "viem";
var AccountInitData = /** @class */ (function () {
    function AccountInitData(params) {
        this.accountInitDataParams = params;
        // If no salt is provided, encode a 0x0 (len. 32) salt
        this.salt = params.salt
            ? stringToHex(params.salt)
            : "0x0000000000000000000000000000000000000000000000000000000000000000";
    }
    return AccountInitData;
}());
export { AccountInitData };
var MultichainAccount = /** @class */ (function () {
    function MultichainAccount(deployments, accountInitData) {
        this.deployments = deployments;
        this.uniqueAddresses = new Set(this.deployments.map(function (deployment) { return deployment.address; }));
        this.accountInitData = accountInitData;
    }
    MultichainAccount.prototype.getAddress = function (chainId) {
        var _a;
        return (_a = this.deployments.find(function (deployment) { return deployment.chainId === chainId; })) === null || _a === void 0 ? void 0 : _a.address;
    };
    MultichainAccount.prototype.getAddresses = function (chainIds) {
        var _this = this;
        return chainIds.map(function (id) {
            var _a;
            return (_a = _this.deployments.find(function (deployment) { return deployment.chainId === id; })) === null || _a === void 0 ? void 0 : _a.address;
        });
    };
    return MultichainAccount;
}());
export { MultichainAccount };
//# sourceMappingURL=account.service.js.map