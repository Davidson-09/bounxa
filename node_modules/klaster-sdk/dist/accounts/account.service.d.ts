import { Hex } from "viem";
import { AccountDeployment } from "../types";
export declare abstract class AccountInitData<TParams> {
    abstract accountProviderId: string;
    accountInitDataParams: TParams;
    salt: Hex;
    abstract encodeAccountCreationFactoryData(): Hex;
    constructor(params: TParams & {
        salt?: string;
    });
}
export declare class MultichainAccount {
    private deployments;
    accountInitData: AccountInitData<Object>;
    readonly uniqueAddresses: Set<`0x${string}`>;
    constructor(deployments: AccountDeployment[], accountInitData: AccountInitData<Object>);
    getAddress(chainId: number): `0x${string}` | undefined;
    getAddresses(chainIds: number[]): (`0x${string}` | undefined)[];
}
//# sourceMappingURL=account.service.d.ts.map