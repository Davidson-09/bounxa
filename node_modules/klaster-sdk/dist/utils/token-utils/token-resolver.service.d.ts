interface TokenInfo {
    name: string;
    address: string;
    symbol: string;
    decimals: number;
}
/**
 * Represents the symbol of a payment token supported by the system.
 * These symbols correspond to various tokens
 * that can be used for payments across different blockchain networks.
 */
export type PaymentTokenSymbol = "ETH" | "WETH" | "LINK" | "USDC" | "wstETH" | "USDT" | "MATIC" | "WMATIC" | "stMATIC" | "AVAX" | "WAVAX" | "BNB" | "WBNB" | "axlUSDC" | "crUSDC" | "BSC-USD";
/**
 * Resolves a payment token based on its symbol and the chain ID.
 *
 * @param {PaymentTokenSymbol} symbol - The symbol of the payment token to resolve.
 * @param {number} chainId - The ID of the blockchain network.
 * @returns {Promise<ResolvedToken>} A promise that resolves to the token information.
 * @throws {Error} If the token cannot be resolved for the given chain ID.
 */
export declare function resolveToken(symbol: PaymentTokenSymbol, chainId: number): TokenInfo;
export {};
//# sourceMappingURL=token-resolver.service.d.ts.map