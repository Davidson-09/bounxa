export declare const wait: (ms: number) => Promise<undefined>;
/**
 * Repeatedly calls a given asynchronous function until it resolves with a value
 * @param toRepeat The function that should be repeated
 * @param timeout The timeout in milliseconds between retries, defaults to 5000
 * @returns The result of the toRepeat function
 */
export declare const repeatUntilDone: <T>(toRepeat: () => Promise<T | undefined>, timeout?: number) => Promise<T>;
export declare const isZeroAddress: (address: string) => boolean;
export declare const isNativeTokenAddress: (address: string) => boolean;
//# sourceMappingURL=utils.d.ts.map